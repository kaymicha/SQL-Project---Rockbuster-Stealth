-- Checking for duplicates in the film table
SELECT title, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating, COUNT(*)
FROM film
GROUP BY title, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating
HAVING COUNT (*) >1;

-- Checking for non-uniform data in the film table
SELECT DISTINCT rating
FROM film

-- Checking for missing data in the film table
SELECT * 
FROM film
WHERE rating IS NULL

-- Summarizing data in the film table
SELECT MIN(rental_duration)AS min_rental_duration,
	   MAX(rental_duration)AS max_rental_duration,
	   AVG(rental_duration)AS avg_rental_duration,
	   COUNT(rental_duration)AS count_rental_duration_values,
	   MIN(rental_rate)AS min_rental_rate,
	   MAX(rental_rate)AS max_rental_rate,
	   AVG(rental_rate)AS avg_rental_rate,
	   COUNT(rental_rate)AS count_rental_rate_values,
	   MIN(length)AS min_length,
	   MAX(length)AS max_length,
	   AVG(length)AS avg_length,
	   COUNT(length)AS count_length_values,
	   MIN(replacement_cost)AS min_replacement_cost,
	   MAX(replacement_cost)AS max_replacement_cost,
	   AVG(replacement_cost)AS avg_replacement_cost,
	   COUNT(replacement_cost)AS count_replacement_cost_values,
	   COUNT(*) AS count_rows
FROM film
